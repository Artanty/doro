name: Node.js CI

on:
  push:
    tags:
      - '*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: #for Create release branch
      contents: write

    steps:
    - name: Set env
      run: echo "TAG=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci
      working-directory: ./web

    - name: Create configuration file
      run: |
        echo "RECONNECT_TRIES=${{ secrets.RECONNECT_TRIES }} 
        SERVER_URL=${{ secrets.SERVER_URL }}" > .env
      working-directory: ./web

    # - name: Build project
    #   run: npm run build
    #   working-directory: ./web

    # - name: Install Vercel CLI
    #   run: npm install --global vercel@canary
    #   working-directory: ./web

    # - name: Pull Vercel Environment Information
    #   run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
    # - name: Build Project Artifacts
    #   run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
    # - name: Deploy Project Artifacts to Vercel
      # run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

    # - name: Set Vercel Project
    #   run: vercel switch ${{ secrets.VERCEL_PROJECT_ID }}

    # - name: Deploy Project Artifacts to Vercel
    #   run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

    - uses: actions/checkout@v2
      #  your build commands
    - run: |
        cd web
        npm ci
        npm run build
    - uses: amondnet/vercel-action@v25 #deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
        github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
        vercel-args: '--prod' #Optional
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}  #Required
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required 
        working-directory: ./web/dist/counter