name: Node.js CI

on:
  push:
    tags:
      - '**deploy-web**'

permissions:
  contents: write
  actions: write
  pull-requests: write
  repository-projects: write

jobs:
  deploy-web:
    runs-on: ubuntu-latest
    container: pandoc/latex

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get repository name
        id: repo_name
        run: |
          REPO_PART=${GITHUB_REPOSITORY##*/}
          echo "repo_part=$REPO_PART" >> $GITHUB_OUTPUT
        
      - name: Run Custom Action
        id: send_post_request
        uses: Artanty/act2@master
        with:
          projectId: ${{ steps.repo_name.outputs.repo_part }}@github
          namespace: "web"
          commit: ${{ github.sha }}
          stage: 'DEPLOY'

      - name: Remove .env from .gitignore
        run: |
          cd ./web
          sed -i '/^\.env$/d' .gitignore

      - name: Create configuration file
        run: |
          cd ./web
          echo "SAFE_URL=${{ fromJson(steps.send_post_request.outputs.response).data.SAFE_URL }}" > .env          

      - name: Set environment variables and push to another repository
        run: |
          echo "GIT_PAT=${{ fromJson(steps.send_post_request.outputs.response).data.GIT_PAT }}" >> $GITHUB_ENV
          echo "GIT_LOGIN=${{ fromJson(steps.send_post_request.outputs.response).data.GIT_LOGIN }}" >> $GITHUB_ENV
          echo "GIT_REPO=${{ fromJson(steps.send_post_request.outputs.response).data.GIT_REPO }}" >> $GITHUB_ENV
          echo "DEPLOY_HOOK=${{ fromJson(steps.send_post_request.outputs.response).data.DEPLOY_HOOK }}" >> $GITHUB_ENV

      - name: Pushes to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ env.GIT_PAT }}
        with:
          source-directory: './web'
          destination-github-username: ${{ env.GIT_LOGIN }}
          destination-repository-name: ${{ env.GIT_REPO }}
          target-branch: main
          create-target-branch-if-needed: true

      - name: RUN DEPLOY_HOOK
        id: send_post_request2
        continue-on-error: true
        run: |
          RESPONSE=$(curl -s -X GET \
            --connect-timeout 20 --max-time 30 --retry 5 --retry-delay 5 \
            "${{ env.DEPLOY_HOOK }}")
          echo "response=$RESPONSE" >> $GITHUB_OUTPUT

          