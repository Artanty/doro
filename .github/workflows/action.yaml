name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci
      working-directory: ./back

    - name: Build
      run: DB_USERNAME=${{ secrets.DB_USERNAME }} && DB_PASSWORD=${{ secrets.DB_PASSWORD }} && DB_DATABASE=${{ secrets.DB_DATABASE }} && DB_HOST=${{ secrets.DB_HOST }} && DB_DIALECT=${{ secrets.DB_DIALECT }} && DB_SYNC_MODE_FORCE=${{ secrets.DB_SYNC_MODE_FORCE }} && npm run build
      working-directory: ./back

    - name: Create configuration file
      run: |
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }} 
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_DATABASE=${{ secrets.DB_DATABASE }}
        DB_HOST=${{ secrets.DB_HOST }}
        DB_DIALECT=${{ secrets.DB_DIALECT }}
        DB_SYNC_MODE_FORCE=${{ secrets.DB_SYNC_MODE_FORCE }}" > .env
      working-directory: ./back/build

    - name: Copy folder content recursively to remote
      uses: garygrossgarten/github-action-scp@release
      with:
        local: ./back/build
        remote: back
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.USER_PASS }}
    - name: Executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # npm install
          # cd back
          # pm2 restart index.js
          # Check if npm is in the PATH
          if ! command -v npm &> /dev/null; then
            # If npm is not in the PATH, try to find it in the default installation directory
            NPM_PATH=$(which npm)
            if [ -z "$NPM_PATH" ]; then
              # If npm is not found in the default installation directory, exit with an error
              echo "npm could not be found in the PATH or the default installation directory."
              exit 1
            fi
            # If npm is found, use it
            echo "npm found at $NPM_PATH"
            NPM_CMD="$NPM_PATH"
          else
            # If npm is in the PATH, use it
            NPM_CMD="npm"
          fi
          # Run npm -v using the determined command
          $NPM_CMD -v